= Android, Creev Mark V et Remarques

:date:          2017-03-01 19:00
:modified:      2017-03-02 6:00
:tags:          android, creev, mark-v, smartphone
:category:      notes
:authors:       Mathieu Kerjouan
:status:	draft
:lang:		fr

:crosscall: https://fr.wikipedia.org/wiki/Crosscall[Crosscall]
:nokia-e51: https://en.wikipedia.org/wiki/Nokia_E51[Nokia E51]
:nokia-n900: https://en.wikipedia.org/wiki/Nokia_N900[Nokia N900]
:creev-mark-v: https://www.amazon.fr/Creev-Mark-Plus-Smartphone-Bluetooth/dp/B01N3SB0R2[Creev Mark V]
:creev: http://creev.com/[Creev]
:jolla: https://shop.jolla.com/eu_en/cat-jolla/jolla-1.html[Jolla]
:jolla-wikipedia: https://en.wikipedia.org/wiki/Jolla[Wikipedia]
:inoi-r7: https://en.wikipedia.org/wiki/INOI_R7[INOI-R7]
:sailfishos: https://sailfishos.org/[SailfishOS]
:inoi: https://en.wikipedia.org/wiki/INOI[INOI]
:inoi-2017: https://4pda.ru/2017/02/20/336158?salt=1487649009102[2017]
:android-6: https://www.android.com/versions/marshmallow-6-0/[Android Marshmallow (6.0)]
:android-6-rel: https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html[Android]
:android-source: https://android.googlesource.com/
:android-env-doc: https://source.android.com/source/initializing.html
:android-source-doc: https://source.android.com/source/downloading.html
:aptoide: https://www.aptoide.com/[Aptoide]
:fdroid: https://f-droid.org/[F-Droid]
:imil: https://imil.net/[Imil]
:oneplus3t: https://oneplus.net/fr/3t[OnePlus 3T]
:symbian: https://en.wikipedia.org/wiki/Symbian[Symbian]
:meego: https://en.wikipedia.org/wiki/MeeGo[MeeGo]

== Creev Mark V Plus

La semaine dernière mon smartphone {crosscall} odyssey a eu quelques
soucis avec la coque arrière, la coque qui permet de protéger la
batterie. Autant dire qu'avoir une batterie qui s'évade assez
fréquemment c'est pas la joie. L'autre soucis: je n'ai qu'un seul
portable. Pas possible de jouer les warlordz et de réparer le
crosscall avec un peu coup de fer à souder, et 2 ou 3 bidouilles.

Après quelques recherches et demandes sur le web, je pense avoir
trouvé un bon rapport qualité/prix. Je n'ai pas envie de mettre plus
de 200€ dans un portable qui ne tient pas 3ans. Pour information, le
portable avant le crosscall était un {nokia-e51} qui m'a duré
7ans. Entre temps, j'ai eu un {nokia-n900} qui n'a pas fait
1an. Autant dire que je recherche quand même un minimum de qualité
dans les téléphones.

Le {creev-mark-v} conçu par la société {creev} semble répondre à ces
problématiques. Tout d'abord il est à ~130€. Surprise que j'aurais du
prévoir, la carte SIM est une micro-sim, autant dire que ma bonne
vieille SIM que je trimballe depuis un sacré bout de temps (au moins
7ans) ne rentre pas dedans! Dépense à rajouter: commander une carte
SIM. En attendant, j'ai un abonnement de secour chez un autre
opérateur avec une carte au bon format. Rulz.

== Android Marshmallow (6.0)

Je n'ai jamais réellement aimé android, je l'ai toujours subis. J'ai
beaucoup aimé {symbian}, l'OS de Nokia qui était très stable et
faisait ce qu'on lui demandait. J'ai aussi beaucoup aimé {meego}, l'OS
du {nokia-n900} basé sur une Debian. Avoir un shell directement sur
son téléphone portable, c'est quand même sexy!

Tiens d'ailleurs? Qu'est devenu le {jolla}? Outch. Rupture de
stock. Si on en croit {jolla-wikipedia}, la société a du mal à
survivre. Il semblerait tout de même qu'un téléphone nommé {inoi-r7}
basé sur {sailfishos} et conçu par la société russe {inoi} sorte en
{inoi-2017}.

Bref. Autant dire que mon expérience avec Android est plutôt nulle. Le
Creev Mark V utilise {android-6}. La release note est disponible sur
la page {android-6-rel} des changements. Android étant un logiciel
Open-Source, le code est {android-source}[librement accessible]. Vous
y trouverez une quantité importante de dépôts git. Pour les plus
courageux, qui voudraient compiler leur propre version d'android, il
vous faudra créer un {android-env-doc}[environnement de compilation]
puis récupérer les {android-source-doc}[sources]. Ça se passe sous
Debian, mais qui sait? On pourrait essayer de lancer tout ça sur Void?

[sh]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

== Migration

J'utilise vraiment, mais alors vraiment très peu d'applications. À
part le lecteur multimédia et le réveil, un téléphone reste un
téléphone (appel + SMS). Mais, il y a quelques applications qui sont
pas mal. {aptoide} et {fdroid} en font parties. Bon, ce ne sont pas
réellement des applications que vous allez utiliser tous les jours,
mais elles permettent de bypasser le google store!

La première contient globalement la même base d'application que le
google store mais sans demande d'authentification. L'autre regroupe
des logiciels open-source, donc, permettant de voir le code source de
l'application qui fonctionnera sur mon téléphone. À installer en
priorité!

Ensuite vient la migration des contacts. Pour se faire, un simple
export au format vcard permet d'avoir la liste complète des contacts
et de pouvoir l'importé vers son nouveau téléphone: rapide et
simple. Je ne parlerais pas de la synchronisation Google. Oui tu es un
peu trop dans ma vie en ce moment!

== La critique globale

Ce que fait ce téléphone au final? Il consomme de l'électricité
(~2jours d'autonomies avec le wifi ou la 3G/4G). Il peut téléphoner et
envoyer des SMS, éventuellement me donner accès à mes mails. La
qualité de l'appareil photo est douteuse, les performances me semblent
plutôt bonnes comparaitre à mon ancien téléphone android. L'écran est
(beaucoup trop) grand, 5.5" c'est pas génial, ça fait presque tablette
dans la poche!

Pour faire ça vite: c'est un téléphone portable pour moins de 200€, on
verra ce qu'il va donner. {imil} m'a
https://twitter.com/iMilnb/status/835061460678107137[conseillé] le
{oneplus3t} et il a l'air vraiment pas mal! L'avenir nous le dira! 

== Hack it bro!

Okay. On a un téléphone chinois, déjà que les fabriquants classiques
ne me donnent pas vraiment confiance... On va tout de même vérifier
qu'est-ce qu'il échange sur le réseau. Pour ça, rien de plus simple,
on va se monter un petit réseau wifi privé avec une OpenBSD-6.0.

=== Communication avec le réseau

Dans un premier temps, nous allons simplement configurer un serveur
DHCP pour que le téléphone puisse récupérer une adresse, en parallèle,
nous allons écouter ce qui se passe sur l'interface...

.Configuration de l'interface réseau (`/etc/hostname.athn0`)
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
up
inet 10.42.42.1/24
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

NOTE: il est préférable de configurer aussi le forward d'ipv4 `sysctl
net.inet.ip.forwarding=1`, ce qui sera potentiellement utile si vous
voulez faire transiter certains paquets sur internet.

.Configuration de packet filter (`/etc/pf.conf`)
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ext = "re0"
priv = "10.42.42.0/24"

# NAT
# match out from $priv to any nat-to $ext source-hash static-port

# log all blocked packet
block log
pass out

# icmpv4 
pass quick proto icmp

# q&d dhcpd
pass on athn proto udp from $priv to port {546, 547} keep state
pass on athn proto udp from port {546, 547} to $priv keep state

# allow http/https connexion to outside world
# pass proto tcp from $priv to port {http, https} keep state
# pass proto tcp from $priv to port {smtp} keep state

# allow domain/http/https to this router
pass in quick proto tcp from $priv to (athn) port {http, https} keep state
pass in quick proto {udp, tcp} from $priv to (athn) port {domain} keep state
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.Configuration du serveur DHCP (`/etc/dhcpd.conf`)
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
subnet 10.42.42.0 netmask 255.255.255.0 {
  range 10.42.42.16 10.42.42.31;
  option routers 10.42.42.1;
  option domain-name-servers 10.42.42.1;
}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.Visualisation de l'activité réseau
[sh]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tcpdump -n -i athn0
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.Capture d'écran
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18:16:12.137994 arp who-has 10.42.42.1 tell 10.42.42.16
18:16:12.138081 arp reply 10.42.42.1 is-at 04:fa:2b:0c:3d:9e
18:16:12.142046 10.42.42.16.29956 > 10.42.42.1.domain: 8050+ A? fota.advmob.cn. (32) (DF)
18:16:12.142085 10.42.42.16.21037 > 10.42.42.1.domain: 23570+ A? mtalk.google.com. (34) (DF)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Tiens? Qu'est-ce que fota.advmob.cn? Un petit tour sur
https://www.robtex.com/advisory/dns/cn/advmob/fota[robtex] puis sur
https://builtwith.com/fota.advmob.cn[buildwith]. Il semblerait que le
serveur soit basé à Shangai. Pas de services particulier dessus, un
nginx qui tourne sur le port 80 et 443.

[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Nmap scan report for fota.advmob.cn (118.193.254.19)
Host is up (0.26s latency).
PORT    STATE  SERVICE  VERSION
25/tcp  closed smtp
53/tcp  closed domain
80/tcp  open   http     nginx 1.10.3
|_http-server-header: nginx/1.10.3
|_http-title: Welcome to nginx!
443/tcp open   ssl/http nginx 1.10.3
|_http-server-header: nginx/1.10.3
|_http-title: Welcome to nginx!
| ssl-cert: Subject: commonName=*.adups.com
| Subject Alternative Name: DNS:*.adups.com, DNS:adups.com
| Not valid before: 2016-02-24T08:48:20
|_Not valid after:  2019-02-25T21:44:48
|_ssl-date: 2017-03-02T17:22:12+00:00; -36s from scanner time.
| tls-nextprotoneg:
|_  http/1.1

Host script results:
|_clock-skew: mean: -36s, deviation: 0s, median: -36s
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Bon, on va essayer de voir ce qu'il envoit sur le serveur distant, pour
ça on va simplement faire un petit forward DNS avec unbound et
démarrer notre serveur HTTP.

.Configuration du serveur DNS (`/var/unbound/etc/unbound.conf`)
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
server:
  interface: 10.42.42.1
  hide-identity: yes
  hide-version: yes
  do-ip6: yes

  access-control: 0.0.0.0/0 refuse
  access-control: 10.42.42.0/24 allow

  local-zone: "fota.advmob.cn." redirect
  local-data: "fota.advmob.cn. IN A 10.42.42.1"

remote-control:
  control-enable: yes
  control-interface: /var/run/unbound.sock
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

La configuration d'unbound est légère, le serveur écoute sur
l'interface `10.42.42.1` sur les ports par défaut (tcp/53 et udp/53),
il refuse toutes les connexions sauf celles en provenance de
`10.42.42.0/24`. Une zone locale est créé, nommée `fota.advmob.cn.`
qui, comme vous l'avez deviné, représente notre serveur distant. Dans
notre cas, le serveur DNS en question va répondre à cette réquête non
pas `118.193.254.19` mais `10.42.42.1`, notre serveur HTTP.

La dernière partie permet simplement de controler unbound via
unbound-control (et donc via les scripts rc).

.Configuration du serveur web (`/etc/httpd.conf`)
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
server "default" {
       listen on 10.42.42.1 port 80
}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Le serveur httpd est configuré de la manière la plus simple
possible. Écoute sur le 80... Et c'est tout.

.Visualisation du traffic DNS et HTTP
[sh]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tcpdump -i athn0 -XX -vvvv -s 1500 -n \
  host 10.42.42.16 and   \
  \( tcp port 80 or      \
     tcp port 443 or     \
     udp port 53 or      \
     tcp port 53         \
  \)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Cette commande permet d'afficher le traffic complet (MTU 1500) avec
une verbosité forte circulant sur l'interface athn0 (notre hotspot
wifi), et de ne récupérer que les paquets contenant l'hote ayant
l'adresse ip `10.42.42.16` (l'adresse IP du smartphone) sur les ports
tcp/80 (http), tcp/443 (https), udp/53 et tcp/53 (domain).

.extrait tcpdump, premier paquet HTTP
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18:48:37.810261 10.42.42.16.34891 > 10.42.42.1.80: P [tcp sum ok]
1:209(208) ack 1 win 1369 <nop,nop,timestamp 4780748 3398050832> (DF)
(ttl 64, id 26819, len 260)
  0000: 4500 0104 68c3 4000 4006 68cc 0a2a 2a10  E...h.@.@.h..**.
  0010: 0a2a 2a01 884b 0050 21f7 9a0a 07dc 87f3  .**..K.P!.......
  0020: 8018 0559 a771 0000 0101 080a 0048 f2cc  ...Y.q.......H..
  0030: ca8a 2410 504f 5354 202f 646d 2f70 7573  ..$.POST /dm/pus
  0040: 6849 6e74 6572 6661 6365 2e64 6f20 4854  hInterface.do HT
  0050: 5450 2f31 2e31 0d0a 436f 6e74 656e 742d  TP/1.1..Content-
  0060: 4c65 6e67 7468 3a20 3238 360d 0a43 6f6e  Length: 286..Con
  0070: 7465 6e74 2d54 7970 653a 2061 7070 6c69  tent-Type: appli
  0080: 6361 7469 6f6e 2f78 2d77 7777 2d66 6f72  cation/x-www-for
  0090: 6d2d 7572 6c65 6e63 6f64 6564 0d0a 486f  m-urlencoded..Ho
  00a0: 7374 3a20 666f 7461 2e61 6476 6d6f 622e  st: fota.advmob.
  00b0: 636e 0d0a 436f 6e6e 6563 7469 6f6e 3a20  cn..Connection:
  00c0: 4b65 6570 2d41 6c69 7665 0d0a 5573 6572  Keep-Alive..User
  00d0: 2d41 6765 6e74 3a20 4170 6163 6865 2d48  -Agent: Apache-H
  00e0: 7474 7043 6c69 656e 742f 554e 4156 4149  ttpClient/UNAVAI
  00f0: 4c41 424c 4520 286a 6176 6120 312e 3429  LABLE (java 1.4)
  0100: 0d0a 0d0a                                ....
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.extrait tcpdump, deuxième paquet HTTP (contenu du POST)
[txt]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18:48:37.811022 10.42.42.16.34891 > 10.42.42.1.80: P [tcp sum ok]
209:495(286) ack 1 win 1369 <nop,nop,timestamp 4780748 3398050832>
(DF) (ttl 64, id 26820, len 338)
  0000: 4500 0152 68c4 4000 4006 687d 0a2a 2a10  E..Rh.@.@.h}.**.
  0010: 0a2a 2a01 884b 0050 21f7 9ada 07dc 87f3  .**..K.P!.......
  0020: 8018 0559 2c25 0000 0101 080a 0048 f2cc  ...Y,%.......H..
  0030: ca8a 2410 6d69 643d 3230 3137 3032 3238  ..$.mid=20170228
  0040: 3137 3236 3538 644b 3139 3038 266d 6f64  172658dK1908&mod
  0050: 756c 653d 7265 6769 7374 6572 2661 7070  ule=register&app
  0060: 763d 5633 2e32 2e33 266d 6f64 656c 3d4d  v=V3.2.3&model=M
  0070: 6172 6b2b 562b 506c 7573 2670 726f 6a65  ark+V+Plus&proje
  0080: 6374 3d77 6865 6174 656b 3637 3337 5f36  ct=wheatek6737_6
  0090: 2e30 5f4d 6172 6b2b 562b 506c 7573 5f65  .0_Mark+V+Plus_e
  00a0: 6e2d 5553 5f6f 7468 6572 2663 6861 6e6e  n-US_other&chann
  00b0: 656c 3d77 6865 6174 656b 3637 3337 5f36  el=wheatek6737_6
  00c0: 2e30 5f4d 6172 6b2b 562b 506c 7573 2670  .0_Mark+V+Plus&p
  00d0: 726f 6475 6374 3d66 6f74 6126 696d 6569  roduct=fota&imei
  00e0: 3d26 696d 7369 3d26 7769 6669 6d61 633d  =&imsi=&wifimac=
  00f0: 266f 7065 7261 746f 723d 2673 6e3d 2673  &operator=&sn=&s
  0100: 696d 3d26 7364 6b6c 6576 656c 3d26 7364  im=&sdklevel=&sd
  0110: 6b76 6572 7369 6f6e 3d36 2e30 2661 706e  kversion=6.0&apn
  0120: 3d57 4946 4926 6c61 6e67 7561 6765 3d66  =WIFI&language=f
  0130: 725f 4652 2672 6573 6f6c 7574 696f 6e3d  r_FR&resolution=
  0140: 266f 656d 3d26 6275 696c 646e 756d 6265  &oem=&buildnumbe
  0150: 723d                                     r=
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

 * https://en.wikipedia.org/wiki/Over-the-air_programming
 * https://source.android.com/devices/tech/ota/
 * https://developer.mbed.org/forum/team-63-Bluetooth-Low-Energy-community/topic/5169/
 * http://www.redbend.com/data/upl/whitepapers/Red_Bend_FOTA_Best_Practices_White_Paper.pdf
 * https://docs.mbed.com/docs/ble-intros/en/latest/Advanced/FOTA/
 * https://www.link-labs.com/blog/firmware-over-the-air-fota-with-lora
 * https://www.os3.nl/_media/2013-2014/courses/ssn/projects/android_ota_update_report.pdf
 * https://esp8266.github.io/Arduino/versions/2.0.0/doc/ota_updates/ota_updates.html
 * http://www.opentravel.org/Resources/Uploads/PDF/OTA_Architecture_Review.pdf
 * http://www.oracle.com/technetwork/systems/ota-156595.html

 * https://source.android.com/devices/tech/ota/tools.html
 * https://source.android.com/devices/tech/ota/inside_packages.html
 * https://github.com/mitchellurgero/OpenOTA
 * https://www.contextis.com/resources/blog/targeting-android-ota-exploitation/

 * http://www.wheatek.com/en/index.jsp

 * http://man.openbsd.org/OpenBSD-current/man8/tcpdump.8
 * http://man.openbsd.org/OpenBSD-current/man8/ifconfig.8
 * http://man.openbsd.org/OpenBSD-current/man5/hostname.if.5
 * http://man.openbsd.org/OpenBSD-current/man8/httpd.8
 * http://man.openbsd.org/OpenBSD-current/man8/unbound.8
 * http://man.openbsd.org/OpenBSD-current/man5/dhcpd.conf.5
 * http://man.openbsd.org/OpenBSD-current/man8/dhcpd.8
 * https://www.freebsd.org/cgi/man.cgi?query=nmap
 * https://metacpan.org/release/Dancer2

=== Debug android avec ADB

 * https://developer.android.com/studio/command-line/adb.html
 * http://adbshell.com/
 * https://github.com/pfalcon/awesome-linux-android-hacking
 * http://www.vogella.com/tutorials/AndroidCommandLine/article.html
 * http://stackoverflow.com/questions/35816964/how-to-get-usb-debugging-on-android-6-working
 * https://www.thepolyglotdeveloper.com/2014/12/debugging-android-source-code-adb/
 * https://stuff.mit.edu/afs/sipb/project/android/docs/tools/debugging/index.html
 * http://jacobkorsgaard.com/?p=518
 * https://github.com/dogriffiths/HeadFirstAndroid/wiki/Some-useful-adb-commands
 * https://github.com/operando/Android-Command-Note
 * https://github.com/cstyan/adbDocumentation